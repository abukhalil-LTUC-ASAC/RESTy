{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/form/crud-functions.js","components/form/form.js","components/loading/loading.svg","components/loading/loading.jsx","components/results/results.js","components/aside/list/list.js","components/aside/aside.js","App.js","serviceWorker.js","index.js"],"names":["Header","Component","Footer","CRUD","url","method","params","id","a","response","getUrl","postUrl","updateUrl","deleteUrl","Error","contentType","headers","indexOf","body","parseParams","obj","console","log","JSON","parse","e","superagent","get","parsed","post","send","put","delete","Form","props","state","onMethodChoice","bind","onURLChange","onParamChange","handleSubmit","Object","keys","form","length","constructor","this","setState","event","target","value","preventDefault","saveData","updateHistory","toggleLoading","handler","setTimeout","history","localStorage","getItem","output","md5","stringify","setItem","onSubmit","onChange","type","checked","name","condition","test","className","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","xlinkHref","_ref3","d","fill","fillOpacity","attributeName","from","to","dur","repeatCount","_ref","svgRef","title","xmlnsXsvg","width","height","viewBox","xmlXspace","ref","ForwardRef","forwardRef","Loading","show","Results","loading","data","replacer","space","children","Aside","lists","updateForm","map","onClick","fetch","React","App","updateHandler","results","fetchHistory","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+ZAaeA,G,yLARX,OAAO,gCACH,2C,GAHaC,cCUNC,G,6KARX,OAAO,gCACH,uD,GAHaD,c,+BCAd,SAAeE,EAAtB,wC,4CAAO,WAAoBC,EAAKC,EAAQC,EAAQC,GAAzC,iBAAAC,EAAA,sDACDC,EAAW,GADV,KAIKJ,EAJL,OAKI,QALJ,OAQI,SARJ,OAWI,WAXJ,QAcI,WAdJ,wCAMkBK,EAAON,GANzB,cAMCK,EAND,oDASkBE,EAAQP,EAAKE,GAT/B,eASCG,EATD,qDAYkBG,EAAUR,EAAKE,EAAQC,GAZzC,eAYCE,EAZD,qDAekBI,EAAUT,EAAKG,GAfjC,eAeCE,EAfD,0CAkBO,IAAIK,MAAM,kBAlBjB,aAwBDC,EAAcN,EAASO,QAAQ,mBAC6B,IAA7CD,EAAYE,QAAQ,oBAzBlC,0CA0BIR,EAASS,MA1Bb,cA4BG,IAAIJ,MAAM,+BA5Bb,6C,sBAgCP,SAASK,EAAYb,GACnB,GAAIA,EACF,IACE,IAAIc,EAIJ,OAHAC,QAAQC,IAAIhB,GACZc,EAAMG,KAAKC,MAAMlB,GACjBe,QAAQC,IAAIF,GACLA,EACP,MAAOK,GACP,MAAM,IAAIX,MAAM,sB,SAKPJ,E,8EAAf,WAAsBN,GAAtB,eAAAI,EAAA,sEACuBkB,IAAWC,IAAIvB,GADtC,cACMK,EADN,yBAESA,GAFT,4C,+BAKeE,E,gFAAf,WAAuBP,EAAKE,GAA5B,iBAAAE,EAAA,6DACMoB,EAAST,EAAYb,GAD3B,SAEuBoB,IAAWG,KAAKzB,GAAK0B,KAAKF,GAFjD,cAEMnB,EAFN,yBAGSA,GAHT,4C,+BAMeG,E,kFAAf,WAAyBR,EAAKE,EAAQC,GAAtC,iBAAAC,EAAA,6DACMoB,EAAST,EAAYb,GAD3B,SAEuBoB,IAAWK,IAAI3B,EAAG,UAAMG,IAAMuB,KAAKF,GAF1D,cAEMnB,EAFN,yBAGSA,GAHT,4C,+BAMeI,E,gFAAf,WAAyBT,EAAKG,GAA9B,eAAAC,EAAA,sEACuBkB,IAAWM,OAAO5B,EAAG,UAAMG,IADlD,cACME,EADN,yBAESA,GAFT,4C,kDC+CewB,E,kDAzGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX/B,IAAK,GACLC,OAAQ,MACRC,OAAQ,GACRC,GAAI,IAGN,EAAK6B,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAZH,E,sEAeOH,GACiB,IAAnCO,OAAOC,KAAKR,EAAMS,MAAMC,QAAgBV,EAAMS,KAAKE,cAAgBJ,SACvEpB,QAAQC,IAAI,sBAAuBY,EAAMS,MACzCG,KAAKC,SAAS,CACZ3C,IAAK8B,EAAMS,KAAKvC,IAChBC,OAAQ6B,EAAMS,KAAKtC,OACnBC,OAAQ4B,EAAMS,KAAKrC,Y,qCAKV0C,GACbF,KAAKC,SAAS,CAAC1C,OAAQ2C,EAAMC,OAAOC,U,kCAG1BF,GACVF,KAAKC,SAAS,CAAC3C,IAAK4C,EAAMC,OAAOC,U,oCAGrBF,GACZF,KAAKC,SAAS,CAACzC,OAAQ0C,EAAMC,OAAOC,U,4EAGnBF,G,qFACjBA,EAAMG,iBAENL,KAAKM,W,SACCN,KAAKZ,MAAMmB,gB,cAEjBP,KAAKZ,MAAMoB,gBAEXjC,QAAQC,IAAI,c,SACSnB,EAAK2C,KAAKX,MAAM/B,IAAK0C,KAAKX,MAAM9B,OAAQyC,KAAKX,MAAM7B,OAAQwC,KAAKX,MAAM5B,I,OAAvFE,E,OACJqC,KAAKZ,MAAMqB,QAAQ9C,GAGnB+C,YAAW,WACT,EAAKtB,MAAMoB,kBACV,K,yIAIH,IAAIG,EAAUlC,KAAKC,MAAMkC,aAAaC,QAAQ,gBAC1CC,EAAS,CACXxD,IAAK0C,KAAKX,MAAM/B,IAChBC,OAAQyC,KAAKX,MAAM9B,OACnBC,OAAQwC,KAAKX,MAAM7B,OACnBC,GAAIuC,KAAKX,MAAM5B,IAEjBc,QAAQC,IAAI,kBAAmBsC,GAG/BH,EAFUI,IAAItC,KAAKuC,UAAUF,KAEdA,EACfF,aAAaK,QAAQ,cAAexC,KAAKuC,UAAUL,M,+BAG3C,IAAD,OACP,OACE,oCACE,0BAAMO,SAAUlB,KAAKN,cACnB,yBAAKyB,SAAUnB,KAAKV,gBAClB,2BAAO8B,KAAK,QAAQhB,MAAM,MAAMiB,QAA+B,QAAtBrB,KAAKX,MAAM9B,OAAkB+D,KAAK,WAD7E,OAEE,2BAAOF,KAAK,QAAQhB,MAAM,OAAOiB,QAA+B,SAAtBrB,KAAKX,MAAM9B,OAAmB+D,KAAK,WAF/E,QAGE,2BAAOF,KAAK,QAAQhB,MAAM,SAASiB,QAA+B,WAAtBrB,KAAKX,MAAM9B,OAAqB+D,KAAK,WAHnF,UAIE,2BAAOF,KAAK,QAAQhB,MAAM,SAASiB,QAA+B,WAAtBrB,KAAKX,MAAM9B,OAAqB+D,KAAK,WAJnF,WAMA,sCAEE,2BAAOF,KAAK,OAAOhB,MAAOJ,KAAKX,MAAM/B,IAAK6D,SAAUnB,KAAKR,eAE3D,2BAAO4B,KAAK,SAAShB,MAAM,WAC3B,6BACCJ,KAAKX,MAAM9B,OACZ,6BACA,kBAAC,KAAD,CAAIgE,UAAW,kBAAM,EAAKlC,MAAM9B,QAAW,cAAciE,KAAK,EAAKnC,MAAM9B,UACvE,kBAAC,OAAD,KACE,yBAAKkE,UAAU,QACb,8BAAUrB,MAAOJ,KAAKX,MAAM7B,OAAQ2D,SAAUnB,KAAKP,kBAGzD,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAM8B,WAAS,Y,GAjGRpE,a,yBCPnB,SAASuE,IAA2Q,OAA9PA,EAAW/B,OAAOgC,QAAU,SAAUxB,GAAU,IAAK,IAAIyB,EAAI,EAAGA,EAAIC,UAAU/B,OAAQ8B,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcnC,OAAOqC,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ5B,EAAO4B,GAAOD,EAAOC,IAAY,OAAO5B,IAA2BgC,MAAMnC,KAAM6B,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnEzB,EAEzF,SAAuC2B,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DzB,EAAS,GAAQmC,EAAa3C,OAAOC,KAAKkC,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWxC,OAAQ8B,IAAOG,EAAMO,EAAWV,GAAQS,EAASlE,QAAQ4D,IAAQ,IAAa5B,EAAO4B,GAAOD,EAAOC,IAAQ,OAAO5B,EAFxMoC,CAA8BT,EAAQO,GAAuB,GAAI1C,OAAO6C,sBAAuB,CAAE,IAAIC,EAAmB9C,OAAO6C,sBAAsBV,GAAS,IAAKF,EAAI,EAAGA,EAAIa,EAAiB3C,OAAQ8B,IAAOG,EAAMU,EAAiBb,GAAQS,EAASlE,QAAQ4D,IAAQ,GAAkBpC,OAAOqC,UAAUU,qBAAqBR,KAAKJ,EAAQC,KAAgB5B,EAAO4B,GAAOD,EAAOC,IAAU,OAAO5B,EAMne,IAAIwC,EAAqB,IAAMC,cAAc,SAAU,CACrDxB,KAAM,kBACNyB,UAAW,0CAGTC,EAAqB,IAAMF,cAAc,IAAK,KAAmB,IAAMA,cAAc,OAAQ,CAC/FG,EAAG,8FACHC,KAAM,UACNC,YAAa,IACE,IAAML,cAAc,mBAAoB,CACvDM,cAAe,YACf9B,KAAM,SACN+B,KAAM,UACNC,GAAI,YACJC,IAAK,SACLC,YAAa,gBAGX,EAAa,SAAoBC,GACnC,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbrE,EAAQgD,EAAyBmB,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMX,cAAc,MAAOlB,EAAS,CACtDgC,UAAW,6BACXC,MAAO,QACPC,OAAQ,QACRC,QAAS,cACTC,UAAW,WACXC,IAAKP,GACJpE,GAAQqE,EAAqB,IAAMb,cAAc,QAAS,KAAMa,GAAS,KAAMd,EAAOG,IAGvFkB,EAA0B,IAAMC,YAAW,SAAU7E,EAAO2E,GAC9D,OAAoB,IAAMnB,cAAc,EAAYlB,EAAS,CAC3D8B,OAAQO,GACP3E,OCjCU8E,GDmCA,I,MC1CC,SAAC9E,GACf,OACE,yBAAKqC,UAAS,kBAAarC,EAAM+E,KAAO,OAAS,SAC/C,kBAAC,EAAD,SC4BSC,EA7BC,SAAChF,GACf,OACE,oCACE,kBAAC,EAAD,CAAS+E,KAAM/E,EAAMiF,UACrB,kBAAC,KAAD,CAAI9C,UAAiC,IAAtBnC,EAAMkF,KAAKxE,QACxB,kBAAC,OAAD,KACE,kBAAC,IAAD,CAAYrC,GAAG,cAAc6G,KAAMlF,EAAMkF,KAAMC,SAC7C,SAAUxC,EAAK3B,GAOb,MANY,SAAR2B,IACF3B,GAAS,UAEC,SAAR2B,IACF3B,GAAQ,IAEHA,GAEToE,MAAM,OAGZ,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMjD,UAAiC,IAAtBnC,EAAMkF,KAAKxE,QAC1B,yBAAK2B,UAAU,SAAf,0BCvBK,G,YAAA,SAAArC,GAEX,OAAO,wBAAIqC,UAAU,QAAQrC,EAAMqF,YCgDxBC,E,kDAjDb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXsF,MAAO,IAHQ,E,sEAOOvF,GACxBY,KAAK4E,aACLrG,QAAQC,IAAI,oBAAqBwB,KAAKX,MAAMsF,S,0CAI5C3E,KAAK4E,aACLrG,QAAQC,IAAI,gB,mCAGA,IAAD,OACXwB,KAAKC,SAAS,CACZ0E,MAAOhF,OAAOC,KAAKI,KAAKZ,MAAMuB,SAASkE,KAAI,SAAC9C,GAAD,OAC3C,wBAAIA,IAAKA,EAAK+C,QAAS,kBAAM,EAAK1F,MAAM2F,MAAM,EAAK3F,MAAMuB,QAAQoB,MAC/D,yBAAKN,UAAU,UACZ,EAAKrC,MAAMuB,QAAQoB,GAAKxE,QAE3B,yBAAKkE,UAAU,OACZ,EAAKrC,MAAMuB,QAAQoB,GAAKzE,KAE3B,yBAAKmE,UAAU,QACZ,EAAKrC,MAAMuB,QAAQoB,GAAKvE,gB,+BAO/B,OACE,+BACE,yBAAKiE,UAAU,SAAf,SAGA,6BACA,kBAAC,EAAD,KACGzB,KAAKX,MAAMsF,Y,GA3CFK,IAAM7H,WC2DX8H,E,kDArDb,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IAeRoB,cAAgB,WACd,EAAKP,SAAS,CAACoE,SAAU,EAAKhF,MAAMgF,WAjBnB,EAoBnBa,cAAgB,SAACZ,GACf/F,QAAQC,IAAI8F,GACZ,EAAKrE,SAAS,CAACkF,QAASb,KAtBP,EAyBnB/D,cAzBmB,sBAyBH,4BAAA7C,EAAA,6DACda,QAAQC,IAAI,oBADE,SAEQC,KAAKC,MAAMkC,aAAaC,QAAQ,gBAFxC,OAERF,EAFQ,OAGd,EAAKV,SAAS,CAACU,YACfpC,QAAQC,IAAI,EAAKa,MAAMsB,SAJT,2CAzBG,EAgCnByE,aAAe,SAACd,GACd/F,QAAQC,IAAI,6BACZD,QAAQC,IAAI8F,GACZ,EAAKrE,SAAS,CAACJ,KAAMyE,KAjCrB,EAAKjF,MAAQ,CACTgF,SAAS,EACTc,QAAS,GACTxE,QAASlC,KAAKC,MAAMkC,aAAaC,QAAQ,gBACzChB,KAAM,IANO,E,qDAuCjB,OACA,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOc,QAASX,KAAKX,MAAMsB,QAASoE,MAAO/E,KAAKoF,eAChD,8BACE,kBAAC,EAAD,CAAM5E,cAAeR,KAAKQ,cAAeC,QAAST,KAAKkF,cAAe3E,cAAeP,KAAKO,cAAeV,KAAMG,KAAKX,MAAMQ,OAC1H,kBAAC,EAAD,CAASwE,QAASrE,KAAKX,MAAMgF,QAASC,KAAMtE,KAAKX,MAAM8F,WAEzD,kBAAC,EAAD,W,GAhDYH,IAAM7H,WCGJkI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/H,QAAQ+H,MAAMA,EAAMC,c","file":"static/js/main.88f1b23a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.scss'\n\nclass Header extends Component {\n  render() {\n    return <header>\n        <div>\n          RESTy\n        </div>\n    </header>\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './footer.scss'\n\nclass Footer extends Component {\n  render() {\n    return <footer>\n        <div>\n          This is my footer\n        </div>\n    </footer>\n  }\n}\n\nexport default Footer;\n","import superagent from 'superagent';\nimport isUrl from 'validator/lib/isURL';\n\nexport async function CRUD(url, method, params, id) {\n  let response = '';\n\n  // if(isUrl(url)){\n    switch (method) {\n      case 'GET':\n        response = await getUrl(url);\n        break;\n      case 'POST':\n        response = await postUrl(url, params);\n        break;\n      case 'UPDATE':\n        response = await updateUrl(url, params, id);\n        break;\n      case 'DELETE':\n        response = await deleteUrl(url, id);\n        break;\n      default:\n        throw new Error('Invalid Method');\n    }\n  // } else {\n  //   throw new Error('Invalid URL');\n  // }\n\n  let contentType = response.headers[\"content-type\"];\n  if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n    return response.body;\n  } else {\n    throw new Error('Invalid Response not a JSON');\n  }\n}\n\nfunction parseParams(params) {\n  if (params) {\n    try {\n      let obj = {};\n      console.log(params);\n      obj = JSON.parse(params);\n      console.log(obj);\n      return obj;\n    } catch (e) {\n      throw new Error('Bad Object Params');\n    }\n  }\n}\n\nasync function getUrl(url) {\n  let response = await superagent.get(url);\n  return response;\n}\n\nasync function postUrl(url, params) {\n  let parsed = parseParams(params);\n  let response = await superagent.post(url).send(parsed);\n  return response;\n}\n\nasync function updateUrl(url, params, id) {\n  let parsed = parseParams(params);\n  let response = await superagent.put(url + `${id}`).send(parsed);\n  return response;\n}\n\nasync function deleteUrl(url, id) {\n  let response = await superagent.delete(url + `${id}`);\n  return response;\n}\n","import React, { Component } from 'react';\nimport './form.scss';\nimport { CRUD } from './crud-functions'\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from 'react-if'\nimport md5 from 'md5';\n\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '', \n      method: 'GET', \n      params: '', \n      id: '',\n    };\n\n    this.onMethodChoice = this.onMethodChoice.bind(this);\n    this.onURLChange = this.onURLChange.bind(this);\n    this.onParamChange = this.onParamChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    if (!(Object.keys(props.form).length === 0 && props.form.constructor === Object)) {\n      console.log('Filling form with: ', props.form)\n      this.setState({\n        url: props.form.url,\n        method: props.form.method,\n        params: props.form.params,\n      });\n    }\n  }\n  \n  onMethodChoice(event) {\n    this.setState({method: event.target.value});\n  }\n\n  onURLChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  onParamChange(event) {\n    this.setState({params: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    // loader will show true\n    this.saveData();\n    await this.props.updateHistory();\n\n    this.props.toggleLoading();\n    \n    console.log('doing crud');\n    let response = await CRUD(this.state.url, this.state.method, this.state.params, this.state.id);\n    this.props.handler(response);\n\n    // toggle loader back to false \n    setTimeout(() => {\n      this.props.toggleLoading();\n    }, 1000);\n  }\n\n  saveData() {\n    let history = JSON.parse(localStorage.getItem('API History'));\n    let output = {\n      url: this.state.url,\n      method: this.state.method,\n      params: this.state.params,\n      id: this.state.id,\n    }\n    console.log('saving output: ', output);\n    let key = md5(JSON.stringify(output))\n\n    history[key] = output;\n    localStorage.setItem('API History', JSON.stringify(history));\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <div onChange={this.onMethodChoice}>\n            <input type=\"radio\" value=\"GET\" checked={this.state.method === \"GET\"} name=\"method\" /> GET\n            <input type=\"radio\" value=\"POST\" checked={this.state.method === \"POST\"} name=\"method\" /> POST\n            <input type=\"radio\" value=\"UPDATE\" checked={this.state.method === \"UPDATE\"} name=\"method\" /> UPDATE\n            <input type=\"radio\" value=\"DELETE\" checked={this.state.method === \"DELETE\"} name=\"method\" /> DELETE\n          </div>\n          <label>\n            URL:\n            <input type=\"text\" value={this.state.url} onChange={this.onURLChange}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n          <br/>\n          {this.state.method}\n          <br/>\n          <If condition={() => this.state.method && (/POST|UPDATE/.test(this.state.method))}>\n            <Then>\n              <div className='body'>\n                <textarea value={this.state.params} onChange={this.onParamChange}/>\n              </div>\n            </Then>\n          <Else>\n            <When condition></When>\n          </Else>\n          </If>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"script\", {\n  type: \"text/ecmascript\",\n  xlinkHref: \"//faviconer.net/jscripts/smil.user.js\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M64 16.5A66.53 66.53 0 0 0 .26 64a63.75 63.75 0 0 1 127.5 0h-.02A66.53 66.53 0 0 0 64 16.5z\",\n  fill: \"#6e346e\",\n  fillOpacity: 1\n}), /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  from: \"0 64 64\",\n  to: \"360 64 64\",\n  dur: \"1200ms\",\n  repeatCount: \"indefinite\"\n}));\n\nvar SvgLoading = function SvgLoading(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlnsXsvg: \"http://www.w3.org/2000/svg\",\n    width: \"500px\",\n    height: \"500px\",\n    viewBox: \"0 0 128 128\",\n    xmlXspace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoading, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loading.5cdf188d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {ReactComponent as ReactLogo} from './loading.svg';\nimport './loading.scss';\n\nconst Loading = (props) => {\n  return (\n    <div className={`overlay ${props.show ? 'show' : 'hide'}`}>\n      <ReactLogo />\n    </div>\n  );\n}\nexport default Loading;","import React from 'react';\nimport './results.scss'\nimport JSONPretty from 'react-json-pretty';\nimport Loading from '../loading/loading.jsx';\nimport { If, Then, Else, When, Unless, Switch, Case, Default } from 'react-if'\n\nconst Results = (props) => {\n  return (\n    <>\n      <Loading show={props.loading}/>\n      <If condition={props.data.length !== 0}>\n        <Then>\n          <JSONPretty id=\"json-pretty\" data={props.data} replacer={\n            function (key, value) {\n              if (key === 'cccc') {\n                value += '~~~abc';\n              }\n              if (key === 'gggg') {\n                value *=10;\n              }\n              return value;\n            }\n          } space=\"6\">\n          </JSONPretty>\n        </Then>\n      <Else>\n        <When condition={props.data.length === 0}>\n          <div className='empty'>Waiting for input</div>\n        </When>\n      </Else>\n      </If>\n    </> \n  );\n}\n\nexport default Results;","import React from 'react';\n\nimport './list.scss';\n\nexport default props => {\n    // console.log(props)\n    return <ul className=\"list\">{props.children}</ul>\n}\n","import React from 'react';\nimport './aside.scss';\nimport List from './list/list';\n\nclass Aside extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.updateForm();\n    console.log('Changed List to: ', this.state.lists)\n  }\n\n  componentDidMount() {\n    this.updateForm();\n    console.log('Added List')\n  }\n\n  updateForm() {\n    this.setState({ \n      lists: Object.keys(this.props.history).map((key) => (\n      <li key={key} onClick={() => this.props.fetch(this.props.history[key])}>\n        <div className=\"method\">\n          {this.props.history[key].method}\n        </div>\n        <div className=\"url\">\n          {this.props.history[key].url}\n        </div>\n        <div className=\"body\">\n          {this.props.history[key].params}\n        </div>\n      </li>))\n    });\n  }\n\n  render() {\n    return (\n      <aside>\n        <div className=\"title\">\n          Aside\n        </div>\n        <hr/>\n        <List>\n          {this.state.lists}\n        </List>\n      </aside>\n    )\n  }\n}\n\nexport default Aside;\n","import React from 'react';\nimport './design/reset.css';\nimport './design/design.scss';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport Form from './components/form/form';\nimport Results from './components/results/results';\nimport Aside from './components/aside/aside';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        loading: false,\n        results: [],\n        history: JSON.parse(localStorage.getItem('API History')),\n        form: {},\n    };\n  }\n  \n  // async componentDidMount() {\n  //   console.log('mounting history');\n  //   this.setState({history: });\n  //   console.log(this.state.history);\n  // }\n\n  toggleLoading = () => {\n    this.setState({loading: !this.state.loading});\n  }\n\n  updateHandler = (data) => {\n    console.log(data);\n    this.setState({results: data});\n  }\n\n  updateHistory = async () => {\n    console.log('updating history');\n    const history = await JSON.parse(localStorage.getItem('API History'));\n    this.setState({history});\n    console.log(this.state.history);\n  }\n\n  fetchHistory = (data) => {\n    console.log('filling form with history');\n    console.log(data);\n    this.setState({form: data});\n  }\n\n  render () {\n    return (\n    <>\n      <Header/>\n      <Aside history={this.state.history} fetch={this.fetchHistory}/>\n      <main>\n        <Form toggleLoading={this.toggleLoading} handler={this.updateHandler} updateHistory={this.updateHistory} form={this.state.form} />\n        <Results loading={this.state.loading} data={this.state.results}/>\n      </main>\n      <Footer/>\n    </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}